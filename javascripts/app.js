(function(/*! Brunch !*/) {
  'use strict';

  var globals = typeof window !== 'undefined' ? window : global;
  if (typeof globals.require === 'function') return;

  var modules = {};
  var cache = {};

  var has = function(object, name) {
    return ({}).hasOwnProperty.call(object, name);
  };

  var expand = function(root, name) {
    var results = [], parts, part;
    if (/^\.\.?(\/|$)/.test(name)) {
      parts = [root, name].join('/').split('/');
    } else {
      parts = name.split('/');
    }
    for (var i = 0, length = parts.length; i < length; i++) {
      part = parts[i];
      if (part === '..') {
        results.pop();
      } else if (part !== '.' && part !== '') {
        results.push(part);
      }
    }
    return results.join('/');
  };

  var dirname = function(path) {
    return path.split('/').slice(0, -1).join('/');
  };

  var localRequire = function(path) {
    return function(name) {
      var dir = dirname(path);
      var absolute = expand(dir, name);
      return globals.require(absolute);
    };
  };

  var initModule = function(name, definition) {
    var module = {id: name, exports: {}};
    definition(module.exports, localRequire(name), module);
    var exports = cache[name] = module.exports;
    return exports;
  };

  var require = function(name) {
    var path = expand(name, '.');

    if (has(cache, path)) return cache[path];
    if (has(modules, path)) return initModule(path, modules[path]);

    var dirIndex = expand(path, './index');
    if (has(cache, dirIndex)) return cache[dirIndex];
    if (has(modules, dirIndex)) return initModule(dirIndex, modules[dirIndex]);

    throw new Error('Cannot find module "' + name + '"');
  };

  var define = function(bundle, fn) {
    if (typeof bundle === 'object') {
      for (var key in bundle) {
        if (has(bundle, key)) {
          modules[key] = bundle[key];
        }
      }
    } else {
      modules[bundle] = fn;
    }
  };

  globals.require = require;
  globals.require.define = define;
  globals.require.register = define;
  globals.require.brunch = true;
})();

window.require.register("app", Function('exports, require, module', "App = Ember.Application.create();\n\nrequire('store');\nrequire('router');\nrequire('models/comment');\nrequire('helpers/formattedDate');\n\nrequire('controllers/application');\nrequire('controllers/users');\nrequire('controllers/ticketsEdit');\nrequire('controllers/ticketsNew');\nrequire('controllers/ticketsShow');\n\nrequire('templates/application');\nrequire('templates/login');\nrequire('templates/index');\nrequire('templates/tickets');\nrequire('templates/tickets/index');\nrequire('templates/tickets/show');\nrequire('templates/tickets/new');\nrequire('templates/tickets/edit');\nrequire('templates/tickets/_form');\nrequire('templates/users');\nrequire('templates/users/index');\nrequire('templates/users/show');\nrequire('templates/users/new');\nrequire('templates/users/edit');\nrequire('templates/users/_form');\n\nrequire('views/applicationView');\nrequire('views/tickets');\nrequire('views/users');\nrequire('views/ticketStatus');\nrequire('views/userSelect');\nrequire('views/commentField');\n\n//@ sourceURL=app.js"));
window.require.register("controllers/application", Function('exports, require, module', "App.ApplicationController = Ember.Controller.extend({\n\n\tcurrentYear: function() {\n\t\tvar now = new Date;\n\t\treturn now.getFullYear();\n\t}.property(),\n\n  currentUser: function() {\n    var userId  = $.cookie(\"emberTrackr\");\n    var user    = App.User.find(userId)\n    if(userId && user.get('isLoaded')){\n      return user;\n    }\n  }.property()\n\n});\n//@ sourceURL=controllers/application.js"));
window.require.register("controllers/ticketsEdit", Function('exports, require, module', "App.TicketsEditController = Ember.ObjectController.extend({\n  needs: [\"users\"]\n})\n//@ sourceURL=controllers/ticketsEdit.js"));
window.require.register("controllers/ticketsNew", Function('exports, require, module', "App.TicketsNewController = Ember.ObjectController.extend({\n  needs: [\"users\"]\n})\n//@ sourceURL=controllers/ticketsNew.js"));
window.require.register("controllers/ticketsShow", Function('exports, require, module', "App.TicketsShowController = Ember.ObjectController.extend({\n  needs: [\"users\", \"application\"]\n});\n//@ sourceURL=controllers/ticketsShow.js"));
window.require.register("controllers/users", Function('exports, require, module', "App.UsersController = Ember.ArrayController.extend()\n//@ sourceURL=controllers/users.js"));
window.require.register("helpers/formattedDate", Function('exports, require, module', "Ember.Handlebars.registerBoundHelper(\"formattedDate\", function(date) {\n  if(!date) { return \"\"}\n  // TODO moment.js?\n  return date.toLocaleTimeString()\n})\n//@ sourceURL=helpers/formattedDate.js"));
window.require.register("models/comment", Function('exports, require, module', "App.Comment = DS.Model.extend({\n  ticket:   DS.belongsTo(\"App.Ticket\"),\n  user:     DS.belongsTo(\"App.User\"),\n  body:     DS.attr(\"string\"),\n  created:  DS.attr(\"date\", {\n    defaultValue: (new Date())\n  })\n})\n\nApp.loadFixtureData(App.Comment, [\n  { id: 1, body: 'Okely Dokely', user: 1, ticket: 1 },\n  { id: 2, body: \"Let's do this\", user: 2, ticket: 2 }\n]);\n//@ sourceURL=models/comment.js"));
window.require.register("models/ticket", Function('exports, require, module', "App.Ticket = DS.Model.extend({\n  title: DS.attr('string'),\n  description: DS.attr('string'),\n  status: DS.attr('string'),  // New | Open | Resolved\n  createdAt: DS.attr('date'),\n  reportedBy: DS.belongsTo('App.User'),\n  assignedTo: DS.belongsTo('App.User'),\n  comments:   DS.hasMany('App.Comment')\n});\n\nApp.loadFixtureData(App.Ticket, [\n  { id: 1, title: 'Create a User model', description: 'Users create tickets and are assigned to tickets.', status: 'New', reportedBy: 2, comments: [1] },\n  { id: 2, title: 'Allow ticket creation', status: 'Resolved', reportedBy: 1, comments: [2] }\n]);\n//@ sourceURL=models/ticket.js"));
window.require.register("models/user", Function('exports, require, module', "App.User = DS.Model.extend({\n  firstName: DS.attr('string'),\n  lastName: DS.attr('string'),\n  email: DS.attr('email'),\n\n  displayName: function() {\n    return '%@ %@'.fmt(this.get('firstName'), this.get('lastName'));\n  }.property('firstName', 'lastName'),\n\n  gravatarURL: function() {\n    var email = this.get('email'),\n        computedMD5;\n\n    if(Ember.isEmpty(email)) {\n      computedMD5 = \"00000000000000000000000000000000\";\n    } else {\n      computedMD5 = md5(email);\n    }\n\n    return 'http://www.gravatar.com/avatar/%@.jpg?s=80'.fmt(computedMD5);\n  }.property('email')\n});\n\nApp.loadFixtureData(App.User, [\n  { id: 1, firstName: 'Tom', lastName: 'Dale', email: 'tom@tomdale.net' },\n  { id: 2, firstName: 'Yehuda', lastName: 'Katz', email: 'wycats@gmail.com' },\n  { id: 3, firstName: 'Peter', lastName: 'Wagenet', email: 'peter.wagenet@gmail.com' }\n]);\n\n//@ sourceURL=models/user.js"));
window.require.register("router", Function('exports, require, module', "App.Router.map(function() {\n  this.route('login');\n  this.route('index', { path: '/'});\n  this.resource('tickets', function() {\n    this.route('new', { path: '/new' });\n    this.route('show', { path: '/:ticket_id' });\n    this.route('edit', { path: '/:ticket_id/edit' });\n  });\n  this.resource('users', function() {\n    this.route('new', { path: '/new' });\n    this.route('show', { path: '/:user_id' });\n    this.route('edit', { path: '/:user_id/edit' });\n  });\n});\n\nrequire('routes/application');\nrequire('routes/login');\nrequire('routes/tickets');\nrequire('routes/tickets/new');\nrequire('routes/tickets/edit');\nrequire('routes/users');\nrequire('routes/users/new');\nrequire('routes/users/edit');\n\n//@ sourceURL=router.js"));
window.require.register("routes/application", Function('exports, require, module', "App.ApplicationRoute = Ember.Route.extend({\n  events: {\n    logout: function(){\n      $.removeCookie(\"emberTrackr\");\n      this.controllerFor(\"application\").notifyPropertyChange(\"currentUser\");\n      this.transitionTo(\"index\");\n    }\n  }\n})\n//@ sourceURL=routes/application.js"));
window.require.register("routes/login", Function('exports, require, module', "App.LoginRoute = Ember.Route.extend({\n  model: function() {\n    return App.User.find();\n  },\n  redirect: function(){\n    if(this.controllerFor(\"application\").get(\"currentUser\")){\n      this.transitionTo(\"index\");\n    }\n  },\n  events: {\n    loginUser: function(userId) {\n      $.cookie(\"emberTrackr\", userId);\n      this.controllerFor(\"application\").notifyPropertyChange(\"currentUser\");\n      this.transitionTo(\"index\");\n    }\n  }\n});\n//@ sourceURL=routes/login.js"));
window.require.register("routes/tickets", Function('exports, require, module', "require('models/ticket');\n\nApp.TicketsRoute = Ember.Route.extend({\n  model: function() {\n    return App.Ticket.find();\n  },\n\n  setupController: function(model, controller) {\n    this.controllerFor(\"users\").set(\"content\", App.User.find());\n  }\n\n  redirect: function() {\n    if(!this.controllerFor(\"application\").get(\"currentUser\")){\n      this.transitionTo(\"login\");\n    }\n  }\n});\n//@ sourceURL=routes/tickets.js"));
window.require.register("routes/tickets/edit", Function('exports, require, module', "require('models/ticket');\n\nApp.TicketsEditRoute = Ember.Route.extend({\n  // This is automatically done by the router, but we may want to leave it in for clarity\n  model: function(params) {\n    return App.Ticket.find(params.ticket_id);\n  },\n\n  events: {\n    save: function() {\n      var transaction = this.get('store.defaultTransaction');\n\n      // Save the transaction\n      transaction.commit();\n\n      // Transition back to the ticket page\n      this.transitionTo('tickets.show', this.modelFor('tickets.edit'));\n    },\n\n    cancel: function() {\n      var transaction = this.get('store.defaultTransaction');\n\n      // Discard any changes in the transaction\n      transaction.rollback();\n\n      // Transition back to the ticket page\n      this.transitionTo('tickets.show', this.modelFor('tickets.edit'));\n    }\n  }\n});\n\n//@ sourceURL=routes/tickets/edit.js"));
window.require.register("routes/tickets/new", Function('exports, require, module', "require('models/ticket');\n\nApp.TicketsNewRoute = Ember.Route.extend({\n\n  model: function() {\n    return App.Ticket.createRecord();\n  },\n\n  events: {\n    save: function() {\n      var transaction = this.get('store.defaultTransaction');\n\n      // Save the transaction\n      transaction.commit();\n\n      // Show the newly created ticket\n      this.transitionTo('tickets.show', this.modelFor('tickets.new'));\n    },\n\n    cancel: function() {\n      var transaction = this.get('store.defaultTransaction');\n\n      // Discard any changes in the transaction\n      transaction.rollback();\n\n      // Transition back to the ticket list\n      this.transitionTo('tickets.index');\n    }\n  }\n});\n//@ sourceURL=routes/tickets/new.js"));
window.require.register("routes/users", Function('exports, require, module', "require('models/user');\n\nApp.UsersRoute = Ember.Route.extend({\n  model: function() {\n    return App.User.find();\n  }\n});\n//@ sourceURL=routes/users.js"));
window.require.register("routes/users/edit", Function('exports, require, module', "require('models/user');\n\nApp.UsersEditRoute = Ember.Route.extend({\n    \n    model: function(params) {\n        return App.User.find(params.user_id);\n\t},\n    \n    events: {\n        save: function() {\n            var transaction = this.get('store.defaultTransaction');\n            \n            // Save the transaction\n            transaction.commit();\n            \n            // Transition back to the ticket page\n            this.transitionTo('users.show', this.modelFor('users.edit'));\n        },\n        \n        cancel: function() {\n            var transaction = this.get('store.defaultTransaction');\n            \n            // Discard any changes in the transaction\n            transaction.rollback();\n            \n            // Transition back to the ticket page\n            this.transitionTo('users.show', this.modelFor('users.edit'));\n        }\n    }\n});\n\n//@ sourceURL=routes/users/edit.js"));
window.require.register("routes/users/new", Function('exports, require, module', "require('models/user');\n\nApp.UsersNewRoute = Ember.Route.extend({\n    \n    model: function() {\n        return App.User.createRecord();\n\t},\n    \n    events: {\n        save: function() {\n            var transaction = this.get('store.defaultTransaction');\n            \n            // Save the transaction\n            transaction.commit();\n            \n            // Show the newly created user \n            this.transitionTo('users.show', this.modelFor('users.new'));\n        },\n        \n        cancel: function() {\n            var transaction = this.get('store.defaultTransaction');\n            \n            // Discard any changes in the transaction\n            transaction.rollback();\n            \n            // Transition back to the user page\n            this.transitionTo('users.index');\n        }\n    }\n});\n\n//@ sourceURL=routes/users/new.js"));
window.require.register("store", Function('exports, require, module', "/**\n    Patch the fixture serializer to properly serialize values. Normally\n    this would not be necessary if we were using the RESTAdapter and it's serializer.\n*/\nDS.FixtureSerializer.reopen({\n    addAttribute: function(hash, key, value) {\n        hash[key] = value;\n    },\n    \n    addId: function(hash, key, id) {\n        hash[key] = id;\n    },\n    \n    addBelongsTo: function(hash, record, key, relationship) {\n        var id = Ember.get(record, relationship.key+'.id');\n        if (!Ember.isNone(id)) { hash[key] = id; }\n    }\n});\n\n/**\n    Patch the fixture serializer to properly generate ids. Normally this would\n    not be necessary if we were using the RESTAdapter and it's serializer.\n*/\nDS.FixtureAdapter.reopen({\n    generateIdForRecord: function(store, record) {\n        return Ember.guidFor(record).replace(/^ember/, '');\n    }\n});\n\n/**\n    Normal fixtures aren't very desirable for this app. Fixture data is reloaded\n    each time `find` is invoked for a record. Effectively overriding and previous\n    changes the user may have made.\n    \n    Instead we'll just load the data like it had come from the server.\n*/\nApp.loadFixtureData = function(type, data) {\n    // Falsify an empty fixture array.\n    type.FIXTURES = [];\n    \n    // Wait to load the fixture data until after the app has booted.\n    Ember.onLoad('application', function() {\n        var store = Ember.get(DS, 'defaultStore'),\n            adapter = store.adapterForType(type);\n\n        if(adapter) { adapter.didFindMany(store, type, data); }\n    });\n};\n\n/**\n    Define the store class. The router will instantiate an instance for us.\n */\nApp.Store = DS.Store.extend({\n\trevision: 11,\n\tadapter: DS.FixtureAdapter\n});\n\n\n//@ sourceURL=store.js"));
window.require.register("templates/application", Function('exports, require, module', "module.exports = Ember.TEMPLATES[module.id.replace('templates/','')] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\nthis.compilerInfo = [2,'>= 1.0.0-rc.3'];\nhelpers = helpers || Ember.Handlebars.helpers; data = data || {};\n  var buffer = '', stack1, stack2, hashTypes, options, escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;\n\nfunction program1(depth0,data) {\n  \n  \n  data.buffer.push(\"Tickets\");\n  }\n\nfunction program3(depth0,data) {\n  \n  \n  data.buffer.push(\"Users\");\n  }\n\nfunction program5(depth0,data) {\n  \n  var buffer = '', hashTypes;\n  data.buffer.push(\"\\n    <a class=\\\"pull-right\\\" href=\\\"#\\\" \");\n  hashTypes = {};\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \"logout\", {hash:{},contexts:[depth0],types:[\"ID\"],hashTypes:hashTypes,data:data})));\n  data.buffer.push(\">Logout</a>\\n  \");\n  return buffer;\n  }\n\nfunction program7(depth0,data) {\n  \n  var buffer = '', stack1, stack2, hashTypes, options;\n  data.buffer.push(\"\\n    \");\n  hashTypes = {'classNames': \"STRING\"};\n  options = {hash:{\n    'classNames': (\"pull-right\")\n  },inverse:self.noop,fn:self.program(8, program8, data),contexts:[depth0],types:[\"ID\"],hashTypes:hashTypes,data:data};\n  stack2 = ((stack1 = helpers.linkTo),stack1 ? stack1.call(depth0, \"login\", options) : helperMissing.call(depth0, \"linkTo\", \"login\", options));\n  if(stack2 || stack2 === 0) { data.buffer.push(stack2); }\n  data.buffer.push(\"\\n  \");\n  return buffer;\n  }\nfunction program8(depth0,data) {\n  \n  \n  data.buffer.push(\"Login\");\n  }\n\n  data.buffer.push(\"<header class=\\\"header\\\">\\n  <h1><a href=\\\"/\\\" class=\\\"logo\\\">EmberTrackr</a></h1>\\n  <ul class=\\\"nav nav-pills\\\">\\n      <li>\");\n  hashTypes = {'class': \"STRING\"};\n  options = {hash:{\n    'class': (\"btn\")\n  },inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],hashTypes:hashTypes,data:data};\n  stack2 = ((stack1 = helpers.linkTo),stack1 ? stack1.call(depth0, \"tickets\", options) : helperMissing.call(depth0, \"linkTo\", \"tickets\", options));\n  if(stack2 || stack2 === 0) { data.buffer.push(stack2); }\n  data.buffer.push(\"</li>\\n      <li>\");\n  hashTypes = {'class': \"STRING\"};\n  options = {hash:{\n    'class': (\"btn\")\n  },inverse:self.noop,fn:self.program(3, program3, data),contexts:[depth0],types:[\"ID\"],hashTypes:hashTypes,data:data};\n  stack2 = ((stack1 = helpers.linkTo),stack1 ? stack1.call(depth0, \"users\", options) : helperMissing.call(depth0, \"linkTo\", \"users\", options));\n  if(stack2 || stack2 === 0) { data.buffer.push(stack2); }\n  data.buffer.push(\"</li>\\n  </ul>\\n  \");\n  hashTypes = {};\n  stack2 = helpers['if'].call(depth0, \"currentUser\", {hash:{},inverse:self.program(7, program7, data),fn:self.program(5, program5, data),contexts:[depth0],types:[\"ID\"],hashTypes:hashTypes,data:data});\n  if(stack2 || stack2 === 0) { data.buffer.push(stack2); }\n  data.buffer.push(\"\\n</header>\\n\\n\");\n  hashTypes = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"outlet\", {hash:{},contexts:[depth0],types:[\"ID\"],hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"\\n\\n<footer class=\\\"footer\\\">\\n  <div class=\\\"container\\\">\\n    <p>Copyright © \");\n  hashTypes = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"currentYear\", {hash:{},contexts:[depth0],types:[\"ID\"],hashTypes:hashTypes,data:data})));\n  data.buffer.push(\" MyCompany</p>\\n  </div>\\n</footer>\");\n  return buffer;\n  \n});\n//@ sourceURL=templates/application.hbs"));
window.require.register("templates/index", Function('exports, require, module', "module.exports = Ember.TEMPLATES[module.id.replace('templates/','')] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\nthis.compilerInfo = [2,'>= 1.0.0-rc.3'];\nhelpers = helpers || Ember.Handlebars.helpers; data = data || {};\n  var buffer = '';\n\n\n  return buffer;\n  \n});\n//@ sourceURL=templates/index.hbs"));
window.require.register("templates/login", Function('exports, require, module', "module.exports = Ember.TEMPLATES[module.id.replace('templates/','')] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\nthis.compilerInfo = [2,'>= 1.0.0-rc.3'];\nhelpers = helpers || Ember.Handlebars.helpers; data = data || {};\n  var buffer = '', stack1, hashTypes, escapeExpression=this.escapeExpression, self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = '', hashTypes;\n  data.buffer.push(\"\\n    <li>\\n      <a href=\\\"#\\\" \");\n  hashTypes = {};\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \"loginUser\", \"id\", {hash:{},contexts:[depth0,depth0],types:[\"ID\",\"ID\"],hashTypes:hashTypes,data:data})));\n  data.buffer.push(\">\\n        Login As \");\n  hashTypes = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"displayName\", {hash:{},contexts:[depth0],types:[\"ID\"],hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"\\n      </a>\\n    </li>\\n  \");\n  return buffer;\n  }\n\n  data.buffer.push(\"<h4>Login</h4>\\n<ul>\\n  \");\n  hashTypes = {};\n  stack1 = helpers.each.call(depth0, \"controller\", {hash:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],hashTypes:hashTypes,data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n</ul>\");\n  return buffer;\n  \n});\n//@ sourceURL=templates/login.hbs"));
window.require.register("templates/tickets", Function('exports, require, module', "module.exports = Ember.TEMPLATES[module.id.replace('templates/','')] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\nthis.compilerInfo = [2,'>= 1.0.0-rc.3'];\nhelpers = helpers || Ember.Handlebars.helpers; data = data || {};\n  var buffer = '', stack1, stack2, hashTypes, options, escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;\n\nfunction program1(depth0,data) {\n  \n  var buffer = '', stack1, stack2, hashTypes, options;\n  data.buffer.push(\"\\n      <li>\");\n  hashTypes = {};\n  options = {hash:{},inverse:self.noop,fn:self.program(2, program2, data),contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],hashTypes:hashTypes,data:data};\n  stack2 = ((stack1 = helpers.linkTo),stack1 ? stack1.call(depth0, \"tickets.show\", \"\", options) : helperMissing.call(depth0, \"linkTo\", \"tickets.show\", \"\", options));\n  if(stack2 || stack2 === 0) { data.buffer.push(stack2); }\n  data.buffer.push(\"</li>\\n    \");\n  return buffer;\n  }\nfunction program2(depth0,data) {\n  \n  var buffer = '', hashTypes;\n  hashTypes = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"id\", {hash:{},contexts:[depth0],types:[\"ID\"],hashTypes:hashTypes,data:data})));\n  data.buffer.push(\": \");\n  hashTypes = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"title\", {hash:{},contexts:[depth0],types:[\"ID\"],hashTypes:hashTypes,data:data})));\n  return buffer;\n  }\n\nfunction program4(depth0,data) {\n  \n  \n  data.buffer.push(\"New Ticket\");\n  }\n\n  data.buffer.push(\"<div class=\\\"span3\\\">\\n  <ul class=\\\"nav nav-list\\\">\\n    \");\n  hashTypes = {};\n  stack1 = helpers.each.call(depth0, \"controller\", {hash:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],hashTypes:hashTypes,data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n  </ul>\\n\\n  <br/>\\n\\n  <p>\");\n  hashTypes = {'classNames': \"STRING\"};\n  options = {hash:{\n    'classNames': (\"btn\")\n  },inverse:self.noop,fn:self.program(4, program4, data),contexts:[depth0],types:[\"ID\"],hashTypes:hashTypes,data:data};\n  stack2 = ((stack1 = helpers.linkTo),stack1 ? stack1.call(depth0, \"tickets.new\", options) : helperMissing.call(depth0, \"linkTo\", \"tickets.new\", options));\n  if(stack2 || stack2 === 0) { data.buffer.push(stack2); }\n  data.buffer.push(\"</p>\\n</div>\\n<div class=\\\"span9\\\">\");\n  hashTypes = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"outlet\", {hash:{},contexts:[depth0],types:[\"ID\"],hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"</div>\");\n  return buffer;\n  \n});\n//@ sourceURL=templates/tickets.hbs"));
window.require.register("templates/tickets/_form", Function('exports, require, module', "module.exports = Ember.TEMPLATES[module.id.replace('templates/','')] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\nthis.compilerInfo = [2,'>= 1.0.0-rc.3'];\nhelpers = helpers || Ember.Handlebars.helpers; data = data || {};\n  var buffer = '', hashTypes, escapeExpression=this.escapeExpression;\n\n\n  data.buffer.push(\"<h5>Title:</h5>\\n\");\n  hashTypes = {'valueBinding': \"STRING\"};\n  data.buffer.push(escapeExpression(helpers.view.call(depth0, \"Ember.TextField\", {hash:{\n    'valueBinding': (\"title\")\n  },contexts:[depth0],types:[\"ID\"],hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"\\n\\n<h5>Description:</h5>\\n\");\n  hashTypes = {'valueBinding': \"STRING\"};\n  data.buffer.push(escapeExpression(helpers.view.call(depth0, \"Ember.TextArea\", {hash:{\n    'valueBinding': (\"description\")\n  },contexts:[depth0],types:[\"ID\"],hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"\\n\\n<h5>Status:</h5>\\n\");\n  hashTypes = {'selectionBinding': \"STRING\"};\n  data.buffer.push(escapeExpression(helpers.view.call(depth0, \"App.TicketStatus\", {hash:{\n    'selectionBinding': (\"status\")\n  },contexts:[depth0],types:[\"ID\"],hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"\\n\\n<h5>Reported By:</h5>\\n\");\n  hashTypes = {'contentBinding': \"STRING\",'selectionBinding': \"STRING\",'prompt': \"STRING\"};\n  data.buffer.push(escapeExpression(helpers.view.call(depth0, \"App.UserSelect\", {hash:{\n    'contentBinding': (\"controllers.users\"),\n    'selectionBinding': (\"reportedBy\"),\n    'prompt': (\"Select a User\")\n  },contexts:[depth0],types:[\"ID\"],hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"\\n\\n<h5>Assigned To:</h5>\\n\");\n  hashTypes = {'contentBinding': \"STRING\",'selectionBinding': \"STRING\",'prompt': \"STRING\"};\n  data.buffer.push(escapeExpression(helpers.view.call(depth0, \"App.UserSelect\", {hash:{\n    'contentBinding': (\"controllers.users\"),\n    'selectionBinding': (\"assignedTo\"),\n    'prompt': (\"Select a User\")\n  },contexts:[depth0],types:[\"ID\"],hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"\\n\\n\\n<br><br>\\n<button \");\n  hashTypes = {};\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \"save\", {hash:{},contexts:[depth0],types:[\"STRING\"],hashTypes:hashTypes,data:data})));\n  data.buffer.push(\">Save</button>\\n<button \");\n  hashTypes = {};\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \"cancel\", {hash:{},contexts:[depth0],types:[\"STRING\"],hashTypes:hashTypes,data:data})));\n  data.buffer.push(\">Cancel</button>\\n\");\n  return buffer;\n  \n});\n//@ sourceURL=templates/tickets/_form.hbs"));
window.require.register("templates/tickets/edit", Function('exports, require, module', "module.exports = Ember.TEMPLATES[module.id.replace('templates/','')] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\nthis.compilerInfo = [2,'>= 1.0.0-rc.3'];\nhelpers = helpers || Ember.Handlebars.helpers; data = data || {};\n  var buffer = '', stack1, hashTypes, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n  data.buffer.push(\"<h3>Edit a Ticket:</h3>\\n\");\n  hashTypes = {};\n  options = {hash:{},contexts:[depth0],types:[\"STRING\"],hashTypes:hashTypes,data:data};\n  data.buffer.push(escapeExpression(((stack1 = helpers.partial),stack1 ? stack1.call(depth0, \"tickets/form\", options) : helperMissing.call(depth0, \"partial\", \"tickets/form\", options))));\n  return buffer;\n  \n});\n//@ sourceURL=templates/tickets/edit.hbs"));
window.require.register("templates/tickets/index", Function('exports, require, module', "module.exports = Ember.TEMPLATES[module.id.replace('templates/','')] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\nthis.compilerInfo = [2,'>= 1.0.0-rc.3'];\nhelpers = helpers || Ember.Handlebars.helpers; data = data || {};\n  \n\n\n  data.buffer.push(\"<h4>\\n  &#8592; Please Select a Ticket\\n</h4>\");\n  \n});\n//@ sourceURL=templates/tickets/index.hbs"));
window.require.register("templates/tickets/new", Function('exports, require, module', "module.exports = Ember.TEMPLATES[module.id.replace('templates/','')] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\nthis.compilerInfo = [2,'>= 1.0.0-rc.3'];\nhelpers = helpers || Ember.Handlebars.helpers; data = data || {};\n  var buffer = '', stack1, hashTypes, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n  data.buffer.push(\"<h3>Create a new Ticket:</h3>\\n\");\n  hashTypes = {};\n  options = {hash:{},contexts:[depth0],types:[\"STRING\"],hashTypes:hashTypes,data:data};\n  data.buffer.push(escapeExpression(((stack1 = helpers.partial),stack1 ? stack1.call(depth0, \"tickets/form\", options) : helperMissing.call(depth0, \"partial\", \"tickets/form\", options))));\n  return buffer;\n  \n});\n//@ sourceURL=templates/tickets/new.hbs"));
window.require.register("templates/tickets/show", Function('exports, require, module', "module.exports = Ember.TEMPLATES[module.id.replace('templates/','')] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\nthis.compilerInfo = [2,'>= 1.0.0-rc.3'];\nhelpers = helpers || Ember.Handlebars.helpers; data = data || {};\n  var buffer = '', stack1, stack2, hashTypes, options, escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing, self=this;\n\nfunction program1(depth0,data) {\n  \n  \n  data.buffer.push(\"Edit Ticket\");\n  }\n\nfunction program3(depth0,data) {\n  \n  var buffer = '', hashTypes;\n  data.buffer.push(\"\\n      <img \");\n  hashTypes = {'src': \"STRING\"};\n  data.buffer.push(escapeExpression(helpers.bindAttr.call(depth0, {hash:{\n    'src': (\"reportedBy.gravatarURL\")\n  },contexts:[],types:[],hashTypes:hashTypes,data:data})));\n  data.buffer.push(\" width=\\\"20\\\"/>\\n      \");\n  hashTypes = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"reportedBy.displayName\", {hash:{},contexts:[depth0],types:[\"ID\"],hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"\\n    \");\n  return buffer;\n  }\n\nfunction program5(depth0,data) {\n  \n  var buffer = '', hashTypes;\n  data.buffer.push(\"\\n      <img \");\n  hashTypes = {'src': \"STRING\"};\n  data.buffer.push(escapeExpression(helpers.bindAttr.call(depth0, {hash:{\n    'src': (\"assignedTo.gravatarURL\")\n  },contexts:[],types:[],hashTypes:hashTypes,data:data})));\n  data.buffer.push(\" width=\\\"20\\\"/>\\n      \");\n  hashTypes = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"assignedTo.displayName\", {hash:{},contexts:[depth0],types:[\"ID\"],hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"\\n    \");\n  return buffer;\n  }\n\nfunction program7(depth0,data) {\n  \n  var buffer = '', stack1, stack2, hashTypes, options;\n  data.buffer.push(\"\\n    <li>\\n      <small>\");\n  hashTypes = {};\n  options = {hash:{},contexts:[depth0],types:[\"ID\"],hashTypes:hashTypes,data:data};\n  data.buffer.push(escapeExpression(((stack1 = helpers.formattedDate),stack1 ? stack1.call(depth0, \"created\", options) : helperMissing.call(depth0, \"formattedDate\", \"created\", options))));\n  data.buffer.push(\"</small>\\n      \");\n  hashTypes = {};\n  options = {hash:{},inverse:self.noop,fn:self.program(8, program8, data),contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],hashTypes:hashTypes,data:data};\n  stack2 = ((stack1 = helpers.linkTo),stack1 ? stack1.call(depth0, \"users.show\", \"user\", options) : helperMissing.call(depth0, \"linkTo\", \"users.show\", \"user\", options));\n  if(stack2 || stack2 === 0) { data.buffer.push(stack2); }\n  data.buffer.push(\"\\n      \");\n  hashTypes = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"body\", {hash:{},contexts:[depth0],types:[\"ID\"],hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"\\n    </li>\\n  \");\n  return buffer;\n  }\nfunction program8(depth0,data) {\n  \n  var buffer = '', hashTypes;\n  data.buffer.push(\"\\n        <img \");\n  hashTypes = {'src': \"STRING\"};\n  data.buffer.push(escapeExpression(helpers.bindAttr.call(depth0, {hash:{\n    'src': (\"user.gravatarURL\")\n  },contexts:[],types:[],hashTypes:hashTypes,data:data})));\n  data.buffer.push(\" width=\\\"20\\\"/>\\n        \");\n  hashTypes = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"user.displayName\", {hash:{},contexts:[depth0],types:[\"ID\"],hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"\\n      \");\n  return buffer;\n  }\n\nfunction program10(depth0,data) {\n  \n  var buffer = '', hashTypes;\n  data.buffer.push(\"\\n  \");\n  hashTypes = {'valueBinding': \"STRING\"};\n  data.buffer.push(escapeExpression(helpers.view.call(depth0, \"Ember.TextField\", {hash:{\n    'valueBinding': (\"view.body\")\n  },contexts:[depth0],types:[\"ID\"],hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"\\n  <button class=\\\"btn btn-small\\\">Save</button>\\n\");\n  return buffer;\n  }\n\n  data.buffer.push(\"<p class=\\\"pull-right\\\">\");\n  hashTypes = {'classNames': \"STRING\"};\n  options = {hash:{\n    'classNames': (\"btn\")\n  },inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0,depth0],types:[\"ID\",\"ID\"],hashTypes:hashTypes,data:data};\n  stack2 = ((stack1 = helpers.linkTo),stack1 ? stack1.call(depth0, \"tickets.edit\", \"content\", options) : helperMissing.call(depth0, \"linkTo\", \"tickets.edit\", \"content\", options));\n  if(stack2 || stack2 === 0) { data.buffer.push(stack2); }\n  data.buffer.push(\"</p>\\n\\n<!-- Turn this into a custom handlebars helper -->\\n<dl class=\\\"dl-horizontal\\\">\\n  <dt>ID:</dt>\\n  <dd>\");\n  hashTypes = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"id\", {hash:{},contexts:[depth0],types:[\"ID\"],hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"</dd>\\n</dl>\\n\\n<dl class=\\\"dl-horizontal\\\">\\n  <dt>Title:</dt>\\n  <dd>\");\n  hashTypes = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"title\", {hash:{},contexts:[depth0],types:[\"ID\"],hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"</dd>\\n</dl>\\n\\n<dl class=\\\"dl-horizontal\\\">\\n  <dt>Description:</dt>\\n  <dd>\");\n  hashTypes = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"description\", {hash:{},contexts:[depth0],types:[\"ID\"],hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"</dd>\\n</dl>\\n\\n<dl class=\\\"dl-horizontal\\\">\\n  <dt>Status:</dt>\\n  <dd>\");\n  hashTypes = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"status\", {hash:{},contexts:[depth0],types:[\"ID\"],hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"</dd>\\n</dl>\\n\\n<dl class=\\\"dl-horizontal\\\">\\n  <dt>Reported By:</dt>\\n  <dd>\\n    \");\n  hashTypes = {};\n  options = {hash:{},inverse:self.noop,fn:self.program(3, program3, data),contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],hashTypes:hashTypes,data:data};\n  stack2 = ((stack1 = helpers.linkTo),stack1 ? stack1.call(depth0, \"users.show\", \"reportedBy\", options) : helperMissing.call(depth0, \"linkTo\", \"users.show\", \"reportedBy\", options));\n  if(stack2 || stack2 === 0) { data.buffer.push(stack2); }\n  data.buffer.push(\"\\n  </dd>\\n</dl>\\n\\n<dl class=\\\"dl-horizontal\\\">\\n  <dt>Assigned To:</dt>\\n  <dd>\\n    \");\n  hashTypes = {};\n  options = {hash:{},inverse:self.noop,fn:self.program(5, program5, data),contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],hashTypes:hashTypes,data:data};\n  stack2 = ((stack1 = helpers.linkTo),stack1 ? stack1.call(depth0, \"users.show\", \"assignedTo\", options) : helperMissing.call(depth0, \"linkTo\", \"users.show\", \"assignedTo\", options));\n  if(stack2 || stack2 === 0) { data.buffer.push(stack2); }\n  data.buffer.push(\"\\n  </dd>\\n</dl>\\n\\n<h5>Comments</h5>\\n<ul class=\\\"unstyled\\\">\\n  \");\n  hashTypes = {};\n  stack2 = helpers.each.call(depth0, \"comments\", {hash:{},inverse:self.noop,fn:self.program(7, program7, data),contexts:[depth0],types:[\"ID\"],hashTypes:hashTypes,data:data});\n  if(stack2 || stack2 === 0) { data.buffer.push(stack2); }\n  data.buffer.push(\"\\n</ul>\\n\");\n  hashTypes = {};\n  stack2 = helpers.view.call(depth0, \"App.CommentField\", {hash:{},inverse:self.noop,fn:self.program(10, program10, data),contexts:[depth0],types:[\"ID\"],hashTypes:hashTypes,data:data});\n  if(stack2 || stack2 === 0) { data.buffer.push(stack2); }\n  return buffer;\n  \n});\n//@ sourceURL=templates/tickets/show.hbs"));
window.require.register("templates/users", Function('exports, require, module', "module.exports = Ember.TEMPLATES[module.id.replace('templates/','')] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\nthis.compilerInfo = [2,'>= 1.0.0-rc.3'];\nhelpers = helpers || Ember.Handlebars.helpers; data = data || {};\n  var buffer = '', stack1, stack2, hashTypes, options, escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;\n\nfunction program1(depth0,data) {\n  \n  var buffer = '', stack1, stack2, hashTypes, options;\n  data.buffer.push(\"\\n      <li>\");\n  hashTypes = {};\n  options = {hash:{},inverse:self.noop,fn:self.program(2, program2, data),contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],hashTypes:hashTypes,data:data};\n  stack2 = ((stack1 = helpers.linkTo),stack1 ? stack1.call(depth0, \"users.show\", \"\", options) : helperMissing.call(depth0, \"linkTo\", \"users.show\", \"\", options));\n  if(stack2 || stack2 === 0) { data.buffer.push(stack2); }\n  data.buffer.push(\"</li>\\n    \");\n  return buffer;\n  }\nfunction program2(depth0,data) {\n  \n  var buffer = '', hashTypes;\n  hashTypes = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"id\", {hash:{},contexts:[depth0],types:[\"ID\"],hashTypes:hashTypes,data:data})));\n  data.buffer.push(\": \");\n  hashTypes = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"displayName\", {hash:{},contexts:[depth0],types:[\"ID\"],hashTypes:hashTypes,data:data})));\n  return buffer;\n  }\n\nfunction program4(depth0,data) {\n  \n  \n  data.buffer.push(\"New User\");\n  }\n\n  data.buffer.push(\"<div class=\\\"span3\\\">\\n  <ul class=\\\"nav nav-list\\\">\\n    \");\n  hashTypes = {};\n  stack1 = helpers.each.call(depth0, \"controller\", {hash:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],hashTypes:hashTypes,data:data});\n  if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n  data.buffer.push(\"\\n  </ul>\\n  <br>\\n  <p>\");\n  hashTypes = {'classNames': \"STRING\"};\n  options = {hash:{\n    'classNames': (\"btn\")\n  },inverse:self.noop,fn:self.program(4, program4, data),contexts:[depth0],types:[\"ID\"],hashTypes:hashTypes,data:data};\n  stack2 = ((stack1 = helpers.linkTo),stack1 ? stack1.call(depth0, \"users.new\", options) : helperMissing.call(depth0, \"linkTo\", \"users.new\", options));\n  if(stack2 || stack2 === 0) { data.buffer.push(stack2); }\n  data.buffer.push(\"</p>\\n</div>\\n\\n<div class=\\\"span9\\\">\\n  \");\n  hashTypes = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"outlet\", {hash:{},contexts:[depth0],types:[\"ID\"],hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"\\n</div>\\n\");\n  return buffer;\n  \n});\n//@ sourceURL=templates/users.hbs"));
window.require.register("templates/users/_form", Function('exports, require, module', "module.exports = Ember.TEMPLATES[module.id.replace('templates/','')] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\nthis.compilerInfo = [2,'>= 1.0.0-rc.3'];\nhelpers = helpers || Ember.Handlebars.helpers; data = data || {};\n  var buffer = '', hashTypes, escapeExpression=this.escapeExpression;\n\n\n  data.buffer.push(\"<h5>First Name:</h5>\\n\");\n  hashTypes = {'valueBinding': \"STRING\"};\n  data.buffer.push(escapeExpression(helpers.view.call(depth0, \"Ember.TextField\", {hash:{\n    'valueBinding': (\"firstName\")\n  },contexts:[depth0],types:[\"ID\"],hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"\\n\\n<h5>Last Name:</h5>\\n\");\n  hashTypes = {'valueBinding': \"STRING\"};\n  data.buffer.push(escapeExpression(helpers.view.call(depth0, \"Ember.TextField\", {hash:{\n    'valueBinding': (\"lastName\")\n  },contexts:[depth0],types:[\"ID\"],hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"\\n\\n<h5>Email:</h5>\\n\");\n  hashTypes = {'valueBinding': \"STRING\"};\n  data.buffer.push(escapeExpression(helpers.view.call(depth0, \"Ember.TextField\", {hash:{\n    'valueBinding': (\"email\")\n  },contexts:[depth0],types:[\"ID\"],hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"\\n\\n\\n<br><br>\\n<button \");\n  hashTypes = {};\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \"save\", {hash:{},contexts:[depth0],types:[\"STRING\"],hashTypes:hashTypes,data:data})));\n  data.buffer.push(\">Save</button>\\n<button \");\n  hashTypes = {};\n  data.buffer.push(escapeExpression(helpers.action.call(depth0, \"cancel\", {hash:{},contexts:[depth0],types:[\"STRING\"],hashTypes:hashTypes,data:data})));\n  data.buffer.push(\">Cancel</button>\");\n  return buffer;\n  \n});\n//@ sourceURL=templates/users/_form.hbs"));
window.require.register("templates/users/edit", Function('exports, require, module', "module.exports = Ember.TEMPLATES[module.id.replace('templates/','')] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\nthis.compilerInfo = [2,'>= 1.0.0-rc.3'];\nhelpers = helpers || Ember.Handlebars.helpers; data = data || {};\n  var buffer = '', stack1, hashTypes, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n  data.buffer.push(\"<h3>Edit a User:</h3>\\n\");\n  hashTypes = {};\n  options = {hash:{},contexts:[depth0],types:[\"STRING\"],hashTypes:hashTypes,data:data};\n  data.buffer.push(escapeExpression(((stack1 = helpers.partial),stack1 ? stack1.call(depth0, \"users/form\", options) : helperMissing.call(depth0, \"partial\", \"users/form\", options))));\n  data.buffer.push(\"\\n\");\n  return buffer;\n  \n});\n//@ sourceURL=templates/users/edit.hbs"));
window.require.register("templates/users/index", Function('exports, require, module', "module.exports = Ember.TEMPLATES[module.id.replace('templates/','')] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\nthis.compilerInfo = [2,'>= 1.0.0-rc.3'];\nhelpers = helpers || Ember.Handlebars.helpers; data = data || {};\n  \n\n\n  data.buffer.push(\"<h4>\\n  &#8592; Please Select a User\\n</h4>\");\n  \n});\n//@ sourceURL=templates/users/index.hbs"));
window.require.register("templates/users/new", Function('exports, require, module', "module.exports = Ember.TEMPLATES[module.id.replace('templates/','')] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\nthis.compilerInfo = [2,'>= 1.0.0-rc.3'];\nhelpers = helpers || Ember.Handlebars.helpers; data = data || {};\n  var buffer = '', stack1, hashTypes, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n  data.buffer.push(\"<h3>Create a new User:</h3>\\n\");\n  hashTypes = {};\n  options = {hash:{},contexts:[depth0],types:[\"STRING\"],hashTypes:hashTypes,data:data};\n  data.buffer.push(escapeExpression(((stack1 = helpers.partial),stack1 ? stack1.call(depth0, \"users/form\", options) : helperMissing.call(depth0, \"partial\", \"users/form\", options))));\n  data.buffer.push(\"\\n\");\n  return buffer;\n  \n});\n//@ sourceURL=templates/users/new.hbs"));
window.require.register("templates/users/show", Function('exports, require, module', "module.exports = Ember.TEMPLATES[module.id.replace('templates/','')] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\nthis.compilerInfo = [2,'>= 1.0.0-rc.3'];\nhelpers = helpers || Ember.Handlebars.helpers; data = data || {};\n  var buffer = '', stack1, stack2, hashTypes, options, escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;\n\nfunction program1(depth0,data) {\n  \n  \n  data.buffer.push(\"Edit User\");\n  }\n\n  data.buffer.push(\"<dl class=\\\"dl-horizontal\\\">\\n  <dd><img \");\n  hashTypes = {'src': \"STRING\"};\n  data.buffer.push(escapeExpression(helpers.bindAttr.call(depth0, {hash:{\n    'src': (\"gravatarURL\")\n  },contexts:[],types:[],hashTypes:hashTypes,data:data})));\n  data.buffer.push(\" class=\\\"img-polaroid\\\" /></dd>\\n</dl>\\n\\n<dl class=\\\"dl-horizontal\\\">\\n  <dt>ID:</dt>\\n  <dd>\");\n  hashTypes = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"id\", {hash:{},contexts:[depth0],types:[\"ID\"],hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"</dd>\\n</dl>\\n\\n<dl class=\\\"dl-horizontal\\\">\\n  <dt>Display Name:</dt>\\n  <dd>\");\n  hashTypes = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"displayName\", {hash:{},contexts:[depth0],types:[\"ID\"],hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"</dd>\\n</dl>\\n\\n<dl class=\\\"dl-horizontal\\\">\\n  <dt>Email:</dt>\\n  <dd>\");\n  hashTypes = {};\n  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"email\", {hash:{},contexts:[depth0],types:[\"ID\"],hashTypes:hashTypes,data:data})));\n  data.buffer.push(\"</dd>\\n</dl>\\n\\n\\n<br><br><br>\\n<p>\");\n  hashTypes = {'classNames': \"STRING\"};\n  options = {hash:{\n    'classNames': (\"btn\")\n  },inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0,depth0],types:[\"ID\",\"ID\"],hashTypes:hashTypes,data:data};\n  stack2 = ((stack1 = helpers.linkTo),stack1 ? stack1.call(depth0, \"users.edit\", \"content\", options) : helperMissing.call(depth0, \"linkTo\", \"users.edit\", \"content\", options));\n  if(stack2 || stack2 === 0) { data.buffer.push(stack2); }\n  data.buffer.push(\"</p>\\n\");\n  return buffer;\n  \n});\n//@ sourceURL=templates/users/show.hbs"));
window.require.register("views/applicationView", Function('exports, require, module', "App.ApplicationView = Ember.View.extend({\n  classNames: \"container-fluid\"\n})\n//@ sourceURL=views/applicationView.js"));
window.require.register("views/commentField", Function('exports, require, module', "// Review: Not sure if this should be a view thing?\n\nApp.CommentField = Ember.View.extend({\n  tagName: \"form\",\n  submit: function(event) {\n    event.preventDefault()\n    var comment = this.get('context.comments').createRecord({\n      body: this.get(\"body\"),\n      user: this.get(\"controller.controllers.application.currentUser\"),\n      created: (new Date())\n    })\n    // comment.get(\"transaction\").commit()\n    this.setProperties({\n      // user: null,\n      body: null\n    })\n  }\n})\n//@ sourceURL=views/commentField.js"));
window.require.register("views/ticketStatus", Function('exports, require, module', "App.TicketStatus = Ember.Select.extend({\n  content: ['New', 'Open', 'Resolved']\n});\n\n//@ sourceURL=views/ticketStatus.js"));
window.require.register("views/tickets", Function('exports, require, module', "App.TicketsView = Ember.View.extend({\n  classNames: \"row-fluid\"\n})\n//@ sourceURL=views/tickets.js"));
window.require.register("views/userSelect", Function('exports, require, module', "// REVIEW: It'd be nice to get a review on this. We often do this in our app, but I'm not sure\n//         if it's proper.\nApp.UserSelect = Ember.Select.extend({\n    optionValuePath: 'content.id',\n    optionLabelPath: 'content.displayName'\n});\n\n//@ sourceURL=views/userSelect.js"));
window.require.register("views/users", Function('exports, require, module', "App.UsersView = Ember.View.extend({\n  classNames: \"row-fluid\"\n})\n//@ sourceURL=views/users.js"));
